#!/bin/bash

set -e

usage()
{
  echo "Usage: resourceput -d [db_name] [resource_key]" 
}

while getopts ":d:" opt; do
  case $opt in
    d)
      DB_NAME=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [ -z "$DB_NAME" ]; then
  usage
  exit 1
fi

shift $((OPTIND-1))

RESOURCE_KEY=$1

if [ -z "$RESOURCE_KEY" ]; then
  usage
  exit 1
fi

RESOURCE_NAME=$(basename "$RESOURCE_KEY")

[ "$MONGO_HOST" = "" ] && MONGO_HOST="127.0.0.1:27017"
MONGO_DB="$DB_NAME"
MONGO_COLLECTION_RESOURCE=resource

# lookup folder_id
FOLDER_KEY=$(dirname "$RESOURCE_KEY")

[ "$FOLDER_KEY" = "." ] && FOLDER_KEY=""

FOLDER_ID=$(./folderput -d "$DB_NAME" "$FOLDER_KEY")

mongo --quiet $MONGO_HOST/$MONGO_DB --eval "db.$MONGO_COLLECTION_RESOURCE.update( { key:\"$RESOURCE_KEY\" }, { \$set: { key:\"$RESOURCE_KEY\", name: \"$RESOURCE_NAME\", folder_id: $FOLDER_ID } }, { upsert: true } )" >/dev/null

RESOURCE_ID=$(mongo --quiet $MONGO_HOST/$MONGO_DB --eval "printjson(db.$MONGO_COLLECTION_RESOURCE.find( { key:\"$RESOURCE_KEY\" }, { _id: 1 } ).toArray() )" | cut -d: -f2 | cut -d' ' -f2 )

echo "$RESOURCE_ID"

exit 0

