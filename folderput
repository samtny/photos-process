#!/bin/bash

set -e

usage()
{
  echo "Usage: folderput -d [db_name] -c [child_folder_id] path"
}

while getopts ":d:c:" opt; do
  case $opt in
    d)
      DB_NAME=$OPTARG
      ;;
    c)
      CHILD_FOLDER_ID=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [ -z "$DB_NAME" ]; then
  usage
  exit 1
fi

shift $((OPTIND-1))

FOLDER_PATH=$1

[ "$MONGO_HOST" = "" ] && MONGO_HOST="127.0.0.1:27017"
MONGO_DB="$DB_NAME"
MONGO_COLLECTION_FOLDER=folder

# insert / update path, name
FOLDER_NAME=$(basename "$FOLDER_PATH")
mongo --quiet $MONGO_HOST/$MONGO_DB --eval "db.$MONGO_COLLECTION_FOLDER.update( { path:\"$FOLDER_PATH\" }, { \$set:{path:\"$FOLDER_PATH\", name:\"$FOLDER_NAME\" } }, { upsert: true } )" >/dev/null

# lookup folder_id
FOLDER_ID=$(mongo --quiet $MONGO_HOST/$MONGO_DB --eval "printjson(db.$MONGO_COLLECTION_FOLDER.find( { path:\"$FOLDER_PATH\" }, { _id: 1 } ).toArray() )" | cut -d: -f2 | cut -d' ' -f2 )

if [ "$CHILD_FOLDER_ID" != "" ]; then
  mongo --quiet $MONGO_HOST/$MONGO_DB --eval "db.$MONGO_COLLECTION_FOLDER.update( { _id: $FOLDER_ID, children: { \$not: { \$in: [ $CHILD_FOLDER_ID ] } } }, { \$push: { children: $CHILD_FOLDER_ID } } )" >/dev/null
fi

# handle parent
if [ "$FOLDER_PATH" != "" ]; then
  PARENT_FOLDER_PATH=$(dirname "$FOLDER_PATH")
  [ "$PARENT_FOLDER_PATH" = "." ] && PARENT_FOLDER_PATH=""

  ./folderput -d "$MONGO_DB" -c "$FOLDER_ID" "$PARENT_FOLDER_PATH"
fi

[ "$CHILD_FOLDER_ID" = "" ] && echo "$FOLDER_ID"

exit 0

